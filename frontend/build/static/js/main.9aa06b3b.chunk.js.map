{"version":3,"sources":["user.svg","Icons.tsx","Header.tsx","Question.tsx","QuestionList.tsx","QuestionsData.ts","PageTitle.tsx","Page.tsx","Clock.js","Footer.tsx","HomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["UserIcon","src","user","alt","width","Header","href","type","placeholder","onChange","e","console","log","currentTarget","value","Question","data","showContent","title","content","length","substring","userName","created","toLocaleDateString","toLocaleTimeString","QuestionList","renderItem","map","question","questionId","questions","Date","answers","answerId","wait","ms","Promise","resolve","setTimeout","getUnansweredQuestions","a","filter","q","PageTitle","children","Page","Clock","props","state","date","this","timerID","setInterval","tick","clearInterval","setState","React","Component","Footer","HomePage","useState","setQuestions","useEffect","unansweredQuestions","setQuestionsLoading","doGetUnansweredQuestions","questionsLoading","onClick","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9aa06b3b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.7152f995.svg\";","import React from 'react';\n\nimport user from './user.svg';\n\nexport const UserIcon = () => <img src={user} alt=\"User\" width=\"12px\" />;\n","import React from 'react';\nimport { UserIcon } from './Icons';\n\nexport const Header = () => {\n  const handleSearchInputChanged = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(e.currentTarget.value);\n  };\n  return (\n    <div>\n      <a href=\"./\"> Q & A </a>\n      <input\n        type=\"text\"\n        placeholder=\"Search...\"\n        onChange={handleSearchInputChanged}\n      />\n      <a href=\"./signin\">\n        <UserIcon />\n        <span>Sign In</span>\n      </a>\n    </div>\n  );\n};\n","import React from 'react';\nimport { QuestionData } from './QuestionsData';\n\ninterface Props {\n  data: QuestionData;\n  showContent?: boolean;\n}\n\nexport const Question = ({ data, showContent = true }: Props) => (\n  <div>\n    <div>{data.title}</div>\n    {showContent && (\n      <div>\n        {data.content.length > 50\n          ? `${data.content.substring(0, 50)}...`\n          : data.content}\n      </div>\n    )}\n    <div>\n      {`Asked by ${data.userName} on\n            ${data.created.toLocaleDateString()} ${data.created.toLocaleTimeString()}`}\n    </div>\n  </div>\n);\n\n//Question.defaultProps = {\n//  showContent: true,\n//};\n","import React from 'react';\nimport { QuestionData } from './QuestionsData';\nimport { Question } from './Question';\n\ninterface Props {\n  data: QuestionData[];\n  renderItem?: (item: QuestionData) => JSX.Element;\n}\n\nexport const QuestionList = ({ data, renderItem }: Props) => (\n  <ul>\n    {data.map((question) => (\n      <li key={question.questionId}>\n        {renderItem ? renderItem(question) : <Question data={question} />}\n      </li>\n    ))}\n  </ul>\n);\n","import { createNoSubstitutionTemplateLiteral } from 'typescript';\n\nexport interface QuestionData {\n  questionId: number;\n  title: string;\n  content: string;\n  userName: string;\n  created: Date;\n  answers: AnswerData[];\n}\n\nexport interface AnswerData {\n  answerId: number;\n  content: string;\n  userName: string;\n  created: Date;\n}\n\nconst questions: QuestionData[] = [\n  {\n    questionId: 1,\n    title: 'Why should I learn TypeScript?',\n    content:\n      'TypeScript seems to be getting popular so I wondered whether it is worth my time learning it? What benefits does it give over JavaScript?',\n    userName: 'Bob',\n    created: new Date(),\n    answers: [\n      {\n        answerId: 1,\n        content: 'To catch problems earlier speeding up your developments',\n        userName: 'Jane',\n        created: new Date(),\n      },\n      {\n        answerId: 2,\n        content:\n          'So, that you can use the JavaScript features of tomorrow, today',\n        userName: 'Fred',\n        created: new Date(),\n      },\n    ],\n  },\n  {\n    questionId: 2,\n    title: 'Which state management tool should I use?',\n    content:\n      'There seem to be a fair few state management tools around for React - React, Unstated, ... Which one should I use?',\n    userName: 'Bob',\n    created: new Date(),\n    answers: [],\n  },\n];\n\nconst wait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nexport const getUnansweredQuestions = async (): Promise<QuestionData[]> => {\n  console.log('**** questions.length = ' + questions.length);\n  await wait(500);\n  return questions.filter((q) => q.answers.length === 0);\n};\n","import React from 'react';\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport const PageTitle = ({ children }: Props) => <h2>{children}</h2>;\n","import React from 'react';\n\nimport { PageTitle } from './PageTitle';\n\ninterface Props {\n  title?: string;\n  children: React.ReactNode;\n}\n\nexport const Page = ({ title, children }: Props) => (\n  <div>\n    {title && <PageTitle>{title}</PageTitle>}\n    {children}\n  </div>\n);\n","import React from 'react';\n\nexport class Clock extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {date: new Date()};\n    }\n  \n    componentDidMount() {\n        this.timerID = setInterval(\n          () => this.tick(),\n          1000\n        );\n      }\n    \n    componentWillUnmount() {\n        clearInterval(this.timerID);\n      }\n    \n    tick() {\n        this.setState({\n          date: new Date()\n        });\n      }\n\n    render() {\n      return (\n        <div>\n          <h2>{this.state.date.toLocaleTimeString()}.</h2>\n        </div>\n      );\n    }\n  };","import React from 'react';\n\nimport { Clock } from './Clock';\n  \nexport const Footer = () => { \n\n  return ( \n    <Clock /> \n  );\n};\n","import React from 'react';\nimport { QuestionList } from './QuestionList';\nimport { getUnansweredQuestions, QuestionData } from './QuestionsData';\nimport { Page } from './Page';\nimport { PageTitle } from './PageTitle';\nimport { Footer } from './Footer';\n\nexport const HomePage = () => {\n  const [questions, setQuestions] = React.useState<QuestionData[]>([]);\n  React.useEffect(() => {\n    const doGetUnansweredQuestions = async () => {\n      const unansweredQuestions = await getUnansweredQuestions();\n      console.log(\n        '* unansweredQuestions.length = ' + unansweredQuestions.length,\n      );\n      setQuestions(unansweredQuestions);\n      setQuestionsLoading(false);\n    };\n    doGetUnansweredQuestions();\n  }, []);\n  const [questionsLoading, setQuestionsLoading] = React.useState(true);\n\n  const handleAskQuestionClicked = () => {\n    console.log('TODO');\n  };\n\n  return (\n    <Page>\n      <div>\n        <div>\n          <PageTitle>Unanswered Questions</PageTitle>\n          <button onClick={handleAskQuestionClicked}>Ask a question</button>\n        </div>\n        {questionsLoading ? (\n          <div>Loading... </div>\n        ) : (\n          <QuestionList data={questions || []} />\n        )}\n      </div>\n      <Footer />\n    </Page>\n  );\n};\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { createNoSubstitutionTemplateLiteral } from 'typescript';\nimport { Header } from './Header';\nimport { HomePage } from './HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}